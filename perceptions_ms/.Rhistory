is.numeric(fall.spring$GAD7.rtot)
# create clinical cut-offs
fall.spring$GAD.clinical <- cut(
fall.spring$GAD7.rtot,
breaks = c( 0, 4, 9, 14, Inf ),
labels = c( "minimal", "mild", "moderate", "severe" ),
right  = FALSE
)
table( fall.spring$GAD.clinical )
87+251+189+98
test <- fall.spring[ which( fall.spring$GAD7.rtot < 5 ), ] )
test <- fall.spring[ which( fall.spring$GAD7.rtot < 5 ), ]
test3 <- fall.spring[ which( fall.spring$GAD7.rtot > 15 ), ]
test3 <- fall.spring[ which( fall.spring$GAD7.rtot > 4 & fall.spring$GAD7.rtot < 10 ), ]
test2 <- fall.spring[ which( fall.spring$GAD7.rtot > 4 & fall.spring$GAD7.rtot < 10 ), ]
test1 <- fall.spring[ which( fall.spring$GAD7.rtot < 5 ), ]
test3 <- fall.spring[ which( fall.spring$GAD7.rtot > 15 ), ]
test4 <- fall.spring[ which( fall.spring$GAD7.rtot > 10 & fall.spring$GAD7.rtot < 15 ), ]
116+264+126+54
rm(test)
test1 <- fall.spring[ which( fall.spring$GAD7.rtot < 5 ), ]
test2 <- fall.spring[ which( fall.spring$GAD7.rtot > 4 & fall.spring$GAD7.rtot < 10 ), ]
test3 <- fall.spring[ which( fall.spring$GAD7.rtot > 10 & fall.spring$GAD7.rtot < 15 ), ]
test4 <- fall.spring[ which( fall.spring$GAD7.rtot > 14 ), ]
126+264+116+70
test3 <- fall.spring[ which( fall.spring$GAD7.rtot > 9 & fall.spring$GAD7.rtot < 15 ), ]
126+264+165+70
# create clinical cut-offs
fall.spring$GAD.clinical <- cut(
fall.spring$GAD7.rtot,
breaks = c( 0, 4, 9, 14, Inf ),
labels = c( "minimal", "mild", "moderate", "severe" ),
right  = FALSE
)
table( fall.spring$GAD.clinical )
# create clinical cut-offs
fall.spring$GAD.clinical <- cut(
fall.spring$GAD7.rtot,
breaks = c( 0, 5, 10, 14, Inf ),
labels = c( "minimal", "mild", "moderate", "severe" ),
right  = FALSE
)
table( fall.spring$GAD.clinical )
# create clinical cut-offs
fall.spring$GAD.clinical <- cut(
fall.spring$GAD7.rtot,
breaks = c( 0, 5, 10, 15, Inf ),
labels = c( "minimal", "mild", "moderate", "severe" ),
right  = FALSE
)
table( fall.spring$GAD.clinical )
is.factor(fall.spring$GAD.clinical)
table( fall.spring$GAD.clinical )
prop.table( table( fall.spring$GAD.clinical ) )
prop.table( table( fall.spring$GAD.clinical ) )*100
# create clinical cut-offs
# create clinical cut-offs
fall.spring$PHQ.clinical <- cut(
fall.spring$PHQ9.rtot,
breaks = c( 0, 5, 10, 15, Inf ),
labels = c( "minimal", "mild", "moderate", "severe" ),
right  = FALSE
)
# create PHQ-9 total scores
fall.spring$PHQtot <- fall.spring$PHQ1 + fall.spring$PHQ2 + fall.spring$PHQ3 +
fall.spring$PHQ4 + fall.spring$PHQ5 + fall.spring$PHQ6 + fall.spring$PHQ7 +
fall.spring$PHQ8 + fall.spring$PHQ9
# check reliability
PHQ <- fall.spring[ ,c( 53:61 ) ]
psych::alpha( PHQ ) # .90
# update PHQ scoring
# should be 4-point Likert (not at all, several days, more than half the days, every day)
# we have a 6-point Likert (Never, Almost never, Once in a while, Some days, Most days, Every day)
fall.spring$PHQ1.r <- ifelse( fall.spring$PHQ1 < 3, 0, fall.spring$PHQ1 )
fall.spring$PHQ1.r <- ifelse( fall.spring$PHQ1 == 3 | fall.spring$PHQ1 == 4, 1, fall.spring$PHQ1.r )
fall.spring$PHQ1.r <- ifelse( fall.spring$PHQ1 == 5, 2, fall.spring$PHQ1.r )
fall.spring$PHQ1.r <- ifelse( fall.spring$PHQ1 == 6, 3, fall.spring$PHQ1.r )
fall.spring$PHQ2.r <- ifelse( fall.spring$PHQ2 < 3, 0, fall.spring$PHQ2 )
fall.spring$PHQ2.r <- ifelse( fall.spring$PHQ2 == 3 | fall.spring$PHQ2 == 4, 1, fall.spring$PHQ2.r )
fall.spring$PHQ2.r <- ifelse( fall.spring$PHQ2 == 5, 2, fall.spring$PHQ2.r )
fall.spring$PHQ2.r <- ifelse( fall.spring$PHQ2 == 6, 3, fall.spring$PHQ2.r )
fall.spring$PHQ3.r <- ifelse( fall.spring$PHQ3 < 3, 0, fall.spring$PHQ3 )
fall.spring$PHQ3.r <- ifelse( fall.spring$PHQ3 == 3 | fall.spring$PHQ3 == 4, 1, fall.spring$PHQ3.r )
fall.spring$PHQ3.r <- ifelse( fall.spring$PHQ3 == 5, 2, fall.spring$PHQ3.r )
fall.spring$PHQ3.r <- ifelse( fall.spring$PHQ3 == 6, 3, fall.spring$PHQ3.r )
fall.spring$PHQ4.r <- ifelse( fall.spring$PHQ4 < 3, 0, fall.spring$PHQ4 )
fall.spring$PHQ4.r <- ifelse( fall.spring$PHQ4 == 3 | fall.spring$PHQ4 == 4, 1, fall.spring$PHQ4.r )
fall.spring$PHQ4.r <- ifelse( fall.spring$PHQ4 == 5, 2, fall.spring$PHQ4.r )
fall.spring$PHQ4.r <- ifelse( fall.spring$PHQ4 == 6, 3, fall.spring$PHQ4.r )
fall.spring$PHQ5.r <- ifelse( fall.spring$PHQ5 < 3, 0, fall.spring$PHQ5 )
fall.spring$PHQ5.r <- ifelse( fall.spring$PHQ5 == 3 | fall.spring$PHQ5 == 4, 1, fall.spring$PHQ5.r )
fall.spring$PHQ5.r <- ifelse( fall.spring$PHQ5 == 5, 2, fall.spring$PHQ5.r )
fall.spring$PHQ5.r <- ifelse( fall.spring$PHQ5 == 6, 3, fall.spring$PHQ5.r )
fall.spring$PHQ6.r <- ifelse( fall.spring$PHQ6 < 3, 0, fall.spring$PHQ6 )
fall.spring$PHQ6.r <- ifelse( fall.spring$PHQ6 == 3 | fall.spring$PHQ6 == 4, 1, fall.spring$PHQ6.r )
fall.spring$PHQ6.r <- ifelse( fall.spring$PHQ6 == 5, 2, fall.spring$PHQ6.r )
fall.spring$PHQ6.r <- ifelse( fall.spring$PHQ6 == 6, 3, fall.spring$PHQ6.r )
fall.spring$PHQ7.r <- ifelse( fall.spring$PHQ7 < 3, 0, fall.spring$PHQ7 )
fall.spring$PHQ7.r <- ifelse( fall.spring$PHQ7 == 3 | fall.spring$PHQ7 == 4, 1, fall.spring$PHQ7.r )
fall.spring$PHQ7.r <- ifelse( fall.spring$PHQ7 == 5, 2, fall.spring$PHQ7.r )
fall.spring$PHQ7.r <- ifelse( fall.spring$PHQ7 == 6, 3, fall.spring$PHQ7.r )
fall.spring$PHQ8.r <- ifelse( fall.spring$PHQ8 < 3, 0, fall.spring$PHQ8 )
fall.spring$PHQ8.r <- ifelse( fall.spring$PHQ8 == 3 | fall.spring$PHQ8 == 4, 1, fall.spring$PHQ8.r )
fall.spring$PHQ8.r <- ifelse( fall.spring$PHQ8 == 5, 2, fall.spring$PHQ8.r )
fall.spring$PHQ8.r <- ifelse( fall.spring$PHQ8 == 6, 3, fall.spring$PHQ8.r )
fall.spring$PHQ9.r <- ifelse( fall.spring$PHQ9 < 3, 0, fall.spring$PHQ9 )
fall.spring$PHQ9.r <- ifelse( fall.spring$PHQ9 == 3 | fall.spring$PHQ9 == 4, 1, fall.spring$PHQ9.r )
fall.spring$PHQ9.r <- ifelse( fall.spring$PHQ9 == 5, 2, fall.spring$PHQ9.r )
fall.spring$PHQ9.r <- ifelse( fall.spring$PHQ9 == 6, 3, fall.spring$PHQ9.r )
# create revised PHQ-9 total scores
fall.spring$PHQ9.rtot <- fall.spring$PHQ1.r + fall.spring$PHQ2.r + fall.spring$PHQ3.r +
fall.spring$PHQ4.r + fall.spring$PHQ5.r + fall.spring$PHQ6.r + fall.spring$PHQ7.r +
fall.spring$PHQ8.r + fall.spring$PHQ9.r
# check reliability
PHQ.r <- fall.spring[ ,c( 76:84 ) ]
psych::alpha( PHQ.r ) # .89
# create clinical cut-offs
# create clinical cut-offs
fall.spring$PHQ.clinical <- cut(
fall.spring$PHQ9.rtot,
breaks = c( 0, 5, 10, 15, Inf ),
labels = c( "minimal", "mild", "moderate", "severe" ),
right  = FALSE
)
table( fall.spring$PHQ.clinical )
prop.table( table( fall.spring$PHQ.clinical ) )
table( fall.spring$PHQ.clinical )
prop.table( table( fall.spring$PHQ.clinical ) )*100
test1 <- fall.spring[ which( fall.spring$PHQ9.rtot < 5 ), ]
test4 <- fall.spring[ which( fall.spring$PHQ9.rtot > 15 ), ]
test2 <- fall.spring[ which( fall.spring$PHQ9.rtot > 4 & fall.spring$PHQ9.rtot < 10 ), ]
test3 <- fall.spring[ which( fall.spring$PHQ9.rtot > 9 & fall.spring$PHQ9.rtot < 15 ), ]
test4 <- fall.spring[ which( fall.spring$PHQ9.rtot > 14 ), ]
100+230+159+136
# load packages
library( MEAL )
library( minfi )
library( GenomicRanges )
library( ggplot2 )
library( IlluminaHumanMethylationEPICanno.ilm10b5.hg38 )
# load methylation data
load( "/Users/david/Desktop/MEAL/RGset_brain_noob_ds.rda" )
brain
# update annotations to Hg38
brain@annotation = c( array = "IlluminaHumanMethylationEPIC", annotation = "ilm10b5.hg38" )
?getAnnotation
dropNonMapping = T
rm(dropNonMapping)
# add annotation data to GRset
rowData( brain ) <- getAnnotation( brain, dropNonMapping = T )[ ,-c( 1:3 ) ]
rm(brain)
# load methylation data
load( "/Users/david/Desktop/MEAL/RGset_brain_noob_ds.rda" )
brain
# update annotations to Hg38
brain@annotation = c( array = "IlluminaHumanMethylationEPIC", annotation = "ilm10b5.hg38" )
brain
# add annotation data to GRset
rowData( brain ) <- getAnnotation( brain )[ ,-c( 1:3 ) ]
# remove problematic psychiatric controls
brain <- brain[ ,which( brain$BrNum != "Br5737" ) ]
brain <- brain[ ,which( brain$BrNum != "Br5867" ) ]
brain <- brain[ ,which( brain$BrNum != "Br6016" ) ]
brain <- brain[ ,which( brain$BrNum != "Br8010" ) ]
brain <- brain[ ,which( brain$BrNum != "Br5288" ) ]
# load phenotype data
pd <- read.delim( "/Users/david/Desktop/pd_final_ancestry.txt", header = T,
check.names = F, sep = "\t" )
# load phenotype data
pd <- read.delim( "/Users/david/Desktop/MEAL/pd_final_ancestry.txt", header = T,
check.names = F, sep = "\t" )
names( pd )
# remove problematic cases
pd <- pd[ which( pd$BrNum != "Br5737" ), ]
pd <- pd[ which( pd$BrNum != "Br5867" ), ]
pd <- pd[ which( pd$BrNum != "Br6016" ), ]
pd <- pd[ which( pd$BrNum != "Br8010" ), ]
pd <- pd[ which( pd$BrNum != "Br5288" ), ]
# create dx_1 variable
pd$dx_1 <- ifelse( ( pd$dx == "substance" ) | ( pd$dx == "normal" ), 0, 1 )
# subset variables of interest
covars <- subset( pd, select = c( "BrNum", "opioids", "m0f1", "NeuN_pos",
"dx_1", "negControl_PC1", "negControl_PC2",
"negControl_PC3", "negControl_PC4",
"ancestry_PC1", "ancestry_PC2", "ancestry_PC3",
"ancestry_PC4" ) )
# merge with brain object
pd2 <- pData( brain )
pd3 <- merge( pd2, covars, by = "BrNum" )
colData( brain ) <- pd3
# create model
model <- model.matrix( ~ opioids + m0f1 + NeuN_pos + dx_1 + PMI + AgeDeath +
negControl_PC1 + negControl_PC2 + negControl_PC3 +
negControl_PC4 + ancestry_PC1 + ancestry_PC2 +
ancestry_PC3 + ancestry_PC4, data = colData( brain ) )
# load sv's
load( "/Users/david/Desktop/MEAL/svobj.rdata" )
# combine sv's with model
model.sv <- cbind( model, svobj$sv )
?runDiffMeanAnalysis
# run single-site analysis
methRes <- runDiffMeanAnalysis( set = brain, model.sv, betas = F )
head(svobj$sv)
out <- eBayes( methRes )
library(limma)
out <- eBayes( methRes )
methRes
names(methRes)
head( getAssociation( methRes, "DiffMean" ) )
out <- eBayes( getAssociation( methRes, "DiffMean" ) )
output <- getAssociation( methREs, "DiffMean" )
output <- getAssociation( methRes, "DiffMean" )
names(output)
output <- as.lmFit( output )
output <- as.data.frame.MArrayLM( output )
output <- getAssociation( methRes, "DiffMean" )
out <- as.MArrayLM( output )
rm(output)
out <- eBayes( methRes$DiffMean )
out <- eBayes( methRes, "DiffMean" )
out <- eBayes( methRes@DiffMean )
head(methRes$DiffMean)
head(methRes@DiffMean)
?getAssociation
output <- getAssociation( methRes, "DiffMean" )
out <- eBayes( output )
?runDiffMeanAnalysis
# run single-site analysis
methRes <- runDiffMeanAnalysis( set = brain, model.sv, betas = F, resultSet = F )
methRes
out <- eBayes( methRes )
View(out)
ss.hits <- topTable( out, coef = "opioids", number = nrow( output ) )
ss.hits[1:10,]
getwd()
# load necessary packages
library( tidyverse )
# load data
fall <- read_csv( "/Users/david/Desktop/aim_study/raw_data/raw_data_fall.csv" )
spring <- read_csv( "/Users/david/Desktop/aim_study/raw_data/raw_data_spring.csv" )
### prep fall data for merging
# subset necessary variables from data files
names( fall )
fall2 <- fall %>% select( ID, Duration.M, Age, Sex, Race1, Race2, Race3, Race4,
Race5, Race6, Race7, Race8, Race_Other, ses1, ses2,
ACE1.1, ACE1.5, ACE2.1, ACE2.5, ACE3.1, ACE3.5,
ACE4.1, ACE4.5, ACE5.1, ACE5.5, ACE6.1, ACE6.5,
ACE7.1, ACE7.5, ACE8.1, ACE8.5, ACE9.1, ACE9.5,
ACE10.1, ACE10.5, ACE11.1, ACE11.5, ACE12.1, ACE12.5,
ACE13.1, ACE13.5, ACE14.1, ACE14.5, ACE15.1, ACE15.5,
GAD1, GAD2, GAD3, GAD4, GAD5, GAD6, GAD7, PHQ1, PHQ2,
PHQ3, PHQ4, PHQ5, PHQ6, PHQ7, PHQ8, PHQ9 )
# recode data
fall2$m0f1 <- ifelse( fall2$Sex == 2, 0, fall2$Sex )
table( fall2$m0f1, exclude = NULL )
fall2$Race.b <- ifelse( fall2$Race7 == 1 & is.na( fall2$Race1 ) & is.na( fall2$Race2 ) & is.na( fall2$Race3 ) &
is.na( fall2$Race4 ) & is.na( fall2$Race5 ) & is.na( fall2$Race6 ) & is.na( fall2$Race8 ), 1, 0 )
table( fall2$Race.b, exclude = NULL )
fall2$ACE1.1 <- ifelse( fall2$ACE1.1 == 5, 1, 0 )
fall2$ACE2.1 <- ifelse( fall2$ACE2.1 == 5, 1, 0 )
fall2$ACE3.1 <- ifelse( fall2$ACE3.1 == 5, 1, 0 )
fall2$ACE4.1 <- ifelse( fall2$ACE4.1 == 5, 1, 0 )
fall2$ACE5.1 <- ifelse( fall2$ACE5.1 == 5, 1, 0 )
fall2$ACE6.1 <- ifelse( fall2$ACE6.1 == 5, 1, 0 )
fall2$ACE7.1 <- ifelse( fall2$ACE7.1 == 5, 1, 0 )
fall2$ACE8.1 <- ifelse( fall2$ACE8.1 == 5, 1, 0 )
fall2$ACE9.1 <- ifelse( fall2$ACE9.1 == 5, 1, 0 )
fall2$ACE10.1 <- ifelse( fall2$ACE10.1 == 5, 1, 0 )
fall2$ACE11.1 <- ifelse( fall2$ACE11.1 == 5, 1, 0 )
fall2$ACE12.1 <- ifelse( fall2$ACE12.1 == 23, 1, 0 )
fall2$ACE13.1 <- ifelse( fall2$ACE13.1 == 5, 1, 0 )
fall2$ACE14.1 <- ifelse( fall2$ACE14.1 == 5, 1, 0 )
fall2$ACE15.1 <- ifelse( fall2$ACE15.1 == 23, 1, 0 )
# create cohort variable for post-merge
fall2$cohort <- 1
### prep spring data for merging
# subset necessary variables from data files
names( spring )
spring2 <- spring %>% select( ID, Duration.M, Age, Sex, Race1, Race2, Race3, Race4,
Race5, Race6, Race7, Race8, Race_Other, ses1, ses2,
ACE1.1, ACE1.5, ACE2.1, ACE2.5, ACE3.1, ACE3.5,
ACE4.1, ACE4.5, ACE5.1, ACE5.5, ACE6.1, ACE6.5,
ACE7.1, ACE7.5, ACE8.1, ACE8.5, ACE9.1, ACE9.5,
ACE10.1, ACE10.5, ACE11.1, ACE11.5, ACE12.1, ACE12.5,
ACE13.1, ACE13.5, ACE14.1, ACE14.5, ACE15.1, ACE15.5,
GAD1, GAD2, GAD3, GAD4, GAD5, GAD6, GAD7, PHQ1, PHQ2,
PHQ3, PHQ4, PHQ5, PHQ6, PHQ7, PHQ8, PHQ9 )
# recode data
spring2$m0f1 <- ifelse( spring2$Sex == 2, 0, spring2$Sex )
table( spring2$m0f1, exclude = NULL )
spring2$Race.b <- ifelse( spring2$Race7 == 1 & is.na( spring2$Race1 ) & is.na( spring2$Race2 ) & is.na( spring2$Race3 ) &
is.na( spring2$Race4 ) & is.na( spring2$Race5 ) & is.na( spring2$Race6 ) & is.na( spring2$Race8 ), 1, 0 )
table( spring2$Race.b, exclude = NULL )
spring2$ACE1.1 <- ifelse( spring2$ACE1.1 == 5, 1, 0 )
spring2$ACE2.1 <- ifelse( spring2$ACE2.1 == 5, 1, 0 )
spring2$ACE3.1 <- ifelse( spring2$ACE3.1 == 5, 1, 0 )
spring2$ACE4.1 <- ifelse( spring2$ACE4.1 == 5, 1, 0 )
spring2$ACE5.1 <- ifelse( spring2$ACE5.1 == 5, 1, 0 )
spring2$ACE6.1 <- ifelse( spring2$ACE6.1 == 5, 1, 0 )
spring2$ACE7.1 <- ifelse( spring2$ACE7.1 == 5, 1, 0 )
spring2$ACE8.1 <- ifelse( spring2$ACE8.1 == 5, 1, 0 )
spring2$ACE9.1 <- ifelse( spring2$ACE9.1 == 5, 1, 0 )
spring2$ACE10.1 <- ifelse( spring2$ACE10.1 == 5, 1, 0 )
spring2$ACE11.1 <- ifelse( spring2$ACE11.1 == 5, 1, 0 )
spring2$ACE12.1 <- ifelse( spring2$ACE12.1 == 23, 1, 0 )
spring2$ACE13.1 <- ifelse( spring2$ACE13.1 == 5, 1, 0 )
spring2$ACE14.1 <- ifelse( spring2$ACE14.1 == 5, 1, 0 )
spring2$ACE15.1 <- ifelse( spring2$ACE15.1 == 23, 1, 0 )
# create cohort variable for post-merge
spring2$cohort <- 2
# check if column names match
stopifnot( identical( colnames( fall2 ), colnames( spring2 ) ) )
# merge tibbles
fall.spring <- bind_rows( fall2[ 1:261, 1:64 ], spring2[ 1:364, 1:64 ] )
# create GAD-7 total scores
fall.spring$GAD7tot <- fall.spring$GAD1 + fall.spring$GAD2 + fall.spring$GAD3 +
fall.spring$GAD4 + fall.spring$GAD5 + fall.spring$GAD6 + fall.spring$GAD7
# check reliability
GAD <- fall.spring[ ,c( 46:52 ) ]
psych::alpha( GAD ) # .89
# update GAD scoring
# should be 4-point Likert (not at all, several days, more than half the days, every day)
# we have a 6-point Likert (Never, Almost never, Once in a while, Some days, Most days, Every day)
fall.spring$GAD1.r <- ifelse( fall.spring$GAD1 < 3, 0, fall.spring$GAD1 )
fall.spring$GAD1.r <- ifelse( fall.spring$GAD1 == 3 | fall.spring$GAD1 == 4, 1, fall.spring$GAD1.r )
fall.spring$GAD1.r <- ifelse( fall.spring$GAD1 == 5, 2, fall.spring$GAD1.r )
fall.spring$GAD1.r <- ifelse( fall.spring$GAD1 == 6, 3, fall.spring$GAD1.r )
fall.spring$GAD2.r <- ifelse( fall.spring$GAD2 < 3, 0, fall.spring$GAD2 )
fall.spring$GAD2.r <- ifelse( fall.spring$GAD2 == 3 | fall.spring$GAD2 == 4, 1, fall.spring$GAD2.r )
fall.spring$GAD2.r <- ifelse( fall.spring$GAD2 == 5, 2, fall.spring$GAD2.r )
fall.spring$GAD2.r <- ifelse( fall.spring$GAD2 == 6, 3, fall.spring$GAD2.r )
fall.spring$GAD3.r <- ifelse( fall.spring$GAD3 < 3, 0, fall.spring$GAD3 )
fall.spring$GAD3.r <- ifelse( fall.spring$GAD3 == 3 | fall.spring$GAD3 == 4, 1, fall.spring$GAD3.r )
fall.spring$GAD3.r <- ifelse( fall.spring$GAD3 == 5, 2, fall.spring$GAD3.r )
fall.spring$GAD3.r <- ifelse( fall.spring$GAD3 == 6, 3, fall.spring$GAD3.r )
fall.spring$GAD4.r <- ifelse( fall.spring$GAD4 < 3, 0, fall.spring$GAD4 )
fall.spring$GAD4.r <- ifelse( fall.spring$GAD4 == 3 | fall.spring$GAD4 == 4, 1, fall.spring$GAD4.r )
fall.spring$GAD4.r <- ifelse( fall.spring$GAD4 == 5, 2, fall.spring$GAD4.r )
fall.spring$GAD4.r <- ifelse( fall.spring$GAD4 == 6, 3, fall.spring$GAD4.r )
fall.spring$GAD5.r <- ifelse( fall.spring$GAD5 < 3, 0, fall.spring$GAD5 )
fall.spring$GAD5.r <- ifelse( fall.spring$GAD5 == 3 | fall.spring$GAD5 == 4, 1, fall.spring$GAD5.r )
fall.spring$GAD5.r <- ifelse( fall.spring$GAD5 == 5, 2, fall.spring$GAD5.r )
fall.spring$GAD5.r <- ifelse( fall.spring$GAD5 == 6, 3, fall.spring$GAD5.r )
fall.spring$GAD6.r <- ifelse( fall.spring$GAD6 < 3, 0, fall.spring$GAD6 )
fall.spring$GAD6.r <- ifelse( fall.spring$GAD6 == 3 | fall.spring$GAD6 == 4, 1, fall.spring$GAD6.r )
fall.spring$GAD6.r <- ifelse( fall.spring$GAD6 == 5, 2, fall.spring$GAD6.r )
fall.spring$GAD6.r <- ifelse( fall.spring$GAD6 == 6, 3, fall.spring$GAD6.r )
fall.spring$GAD7.r <- ifelse( fall.spring$GAD7 < 3, 0, fall.spring$GAD7 )
fall.spring$GAD7.r <- ifelse( fall.spring$GAD7 == 3 | fall.spring$GAD7 == 4, 1, fall.spring$GAD7.r )
fall.spring$GAD7.r <- ifelse( fall.spring$GAD7 == 5, 2, fall.spring$GAD7.r )
fall.spring$GAD7.r <- ifelse( fall.spring$GAD7 == 6, 3, fall.spring$GAD7.r )
# create revised GAD-7 total scores
fall.spring$GAD7.rtot <- fall.spring$GAD1.r + fall.spring$GAD2.r + fall.spring$GAD3.r +
fall.spring$GAD4.r + fall.spring$GAD5.r + fall.spring$GAD6.r + fall.spring$GAD7.r
# check reliability
GAD.r <- fall.spring[ ,c( 66:72 ) ]
psych::alpha( GAD.r ) # .87
# create clinical cut-offs
fall.spring$GAD.clinical <- cut(
fall.spring$GAD7.rtot,
breaks = c( 0, 5, 10, 15, Inf ),
labels = c( "minimal", "mild", "moderate", "severe" ),
right  = FALSE
)
table( fall.spring$GAD.clinical )
prop.table( table( fall.spring$GAD.clinical ) )*100
# create PHQ-9 total scores
fall.spring$PHQtot <- fall.spring$PHQ1 + fall.spring$PHQ2 + fall.spring$PHQ3 +
fall.spring$PHQ4 + fall.spring$PHQ5 + fall.spring$PHQ6 + fall.spring$PHQ7 +
fall.spring$PHQ8 + fall.spring$PHQ9
# check reliability
PHQ <- fall.spring[ ,c( 53:61 ) ]
psych::alpha( PHQ ) # .90
# update PHQ scoring
# should be 4-point Likert (not at all, several days, more than half the days, every day)
# we have a 6-point Likert (Never, Almost never, Once in a while, Some days, Most days, Every day)
fall.spring$PHQ1.r <- ifelse( fall.spring$PHQ1 < 3, 0, fall.spring$PHQ1 )
fall.spring$PHQ1.r <- ifelse( fall.spring$PHQ1 == 3 | fall.spring$PHQ1 == 4, 1, fall.spring$PHQ1.r )
fall.spring$PHQ1.r <- ifelse( fall.spring$PHQ1 == 5, 2, fall.spring$PHQ1.r )
fall.spring$PHQ1.r <- ifelse( fall.spring$PHQ1 == 6, 3, fall.spring$PHQ1.r )
fall.spring$PHQ2.r <- ifelse( fall.spring$PHQ2 < 3, 0, fall.spring$PHQ2 )
fall.spring$PHQ2.r <- ifelse( fall.spring$PHQ2 == 3 | fall.spring$PHQ2 == 4, 1, fall.spring$PHQ2.r )
fall.spring$PHQ2.r <- ifelse( fall.spring$PHQ2 == 5, 2, fall.spring$PHQ2.r )
fall.spring$PHQ2.r <- ifelse( fall.spring$PHQ2 == 6, 3, fall.spring$PHQ2.r )
fall.spring$PHQ3.r <- ifelse( fall.spring$PHQ3 < 3, 0, fall.spring$PHQ3 )
fall.spring$PHQ3.r <- ifelse( fall.spring$PHQ3 == 3 | fall.spring$PHQ3 == 4, 1, fall.spring$PHQ3.r )
fall.spring$PHQ3.r <- ifelse( fall.spring$PHQ3 == 5, 2, fall.spring$PHQ3.r )
fall.spring$PHQ3.r <- ifelse( fall.spring$PHQ3 == 6, 3, fall.spring$PHQ3.r )
fall.spring$PHQ4.r <- ifelse( fall.spring$PHQ4 < 3, 0, fall.spring$PHQ4 )
fall.spring$PHQ4.r <- ifelse( fall.spring$PHQ4 == 3 | fall.spring$PHQ4 == 4, 1, fall.spring$PHQ4.r )
fall.spring$PHQ4.r <- ifelse( fall.spring$PHQ4 == 5, 2, fall.spring$PHQ4.r )
fall.spring$PHQ4.r <- ifelse( fall.spring$PHQ4 == 6, 3, fall.spring$PHQ4.r )
fall.spring$PHQ5.r <- ifelse( fall.spring$PHQ5 < 3, 0, fall.spring$PHQ5 )
fall.spring$PHQ5.r <- ifelse( fall.spring$PHQ5 == 3 | fall.spring$PHQ5 == 4, 1, fall.spring$PHQ5.r )
fall.spring$PHQ5.r <- ifelse( fall.spring$PHQ5 == 5, 2, fall.spring$PHQ5.r )
fall.spring$PHQ5.r <- ifelse( fall.spring$PHQ5 == 6, 3, fall.spring$PHQ5.r )
fall.spring$PHQ6.r <- ifelse( fall.spring$PHQ6 < 3, 0, fall.spring$PHQ6 )
fall.spring$PHQ6.r <- ifelse( fall.spring$PHQ6 == 3 | fall.spring$PHQ6 == 4, 1, fall.spring$PHQ6.r )
fall.spring$PHQ6.r <- ifelse( fall.spring$PHQ6 == 5, 2, fall.spring$PHQ6.r )
fall.spring$PHQ6.r <- ifelse( fall.spring$PHQ6 == 6, 3, fall.spring$PHQ6.r )
fall.spring$PHQ7.r <- ifelse( fall.spring$PHQ7 < 3, 0, fall.spring$PHQ7 )
fall.spring$PHQ7.r <- ifelse( fall.spring$PHQ7 == 3 | fall.spring$PHQ7 == 4, 1, fall.spring$PHQ7.r )
fall.spring$PHQ7.r <- ifelse( fall.spring$PHQ7 == 5, 2, fall.spring$PHQ7.r )
fall.spring$PHQ7.r <- ifelse( fall.spring$PHQ7 == 6, 3, fall.spring$PHQ7.r )
fall.spring$PHQ8.r <- ifelse( fall.spring$PHQ8 < 3, 0, fall.spring$PHQ8 )
fall.spring$PHQ8.r <- ifelse( fall.spring$PHQ8 == 3 | fall.spring$PHQ8 == 4, 1, fall.spring$PHQ8.r )
fall.spring$PHQ8.r <- ifelse( fall.spring$PHQ8 == 5, 2, fall.spring$PHQ8.r )
fall.spring$PHQ8.r <- ifelse( fall.spring$PHQ8 == 6, 3, fall.spring$PHQ8.r )
fall.spring$PHQ9.r <- ifelse( fall.spring$PHQ9 < 3, 0, fall.spring$PHQ9 )
fall.spring$PHQ9.r <- ifelse( fall.spring$PHQ9 == 3 | fall.spring$PHQ9 == 4, 1, fall.spring$PHQ9.r )
fall.spring$PHQ9.r <- ifelse( fall.spring$PHQ9 == 5, 2, fall.spring$PHQ9.r )
fall.spring$PHQ9.r <- ifelse( fall.spring$PHQ9 == 6, 3, fall.spring$PHQ9.r )
# create revised PHQ-9 total scores
fall.spring$PHQ9.rtot <- fall.spring$PHQ1.r + fall.spring$PHQ2.r + fall.spring$PHQ3.r +
fall.spring$PHQ4.r + fall.spring$PHQ5.r + fall.spring$PHQ6.r + fall.spring$PHQ7.r +
fall.spring$PHQ8.r + fall.spring$PHQ9.r
# check reliability
PHQ.r <- fall.spring[ ,c( 76:84 ) ]
psych::alpha( PHQ.r ) # .89
# create clinical cut-offs
# create clinical cut-offs
fall.spring$PHQ.clinical <- cut(
fall.spring$PHQ9.rtot,
breaks = c( 0, 5, 10, 15, Inf ),
labels = c( "minimal", "mild", "moderate", "severe" ),
right  = FALSE
)
table( fall.spring$PHQ.clinical )
prop.table( table( fall.spring$PHQ.clinical ) )*100
boys <- fall.spring[ which( fall.spring$m0f1 == 0 ), ]
girls <- fall.spring[ which( fall.spring$m0f1 == 1 ), ]
table( boys$GAD.clinical )
prop.table( table( boys$GAD.clinical ) )*100
table( girls$GAD.clinical )
prop.table( table( girls$GAD.clinical ) )*100
table( boys$PHQ.clinical )
prop.table( table( boys$PHQ.clinical ) )*100
table( girls$PHQ.clinical )
prop.table( table( girls$PHQ.clinical ) )*100
setwd( "/Users/david/Desktop/aim_study/perceptions_ms/" )
?write_csv
# write out merged and cleaned file
write_csv( fall.spring, file = "perceptions_fall_spring.csv" )
rm(boys)
rm(girls)
rm(GAD)
rm(GAD.r)
rm(PHQ)
rm(PHQ.r)
rm(fall
)
rm(fall2)
rm(spring)
rm(spring2)
###cumulative ACEs###
names(fall.spring)
###cumulative ACEs###
df1 <- fall.spring
rm( fall.spring )
ACE.sum <- df1[ 1,16,18,20,22,24,26,28,30,32,34,36,38,40,42,44 ]
ACE.sum <- df1[ c( 1,16,18,20,22,24,26,28,30,32,34,36,38,40,42,44 ), ]
View(ACE.sum)
ACE.sum <- df1[ ,c( 1,16,18,20,22,24,26,28,30,32,34,36,38,40,42,44 ) ]
sum(is.na(ACE.sum))
sum(is.na(ACE.sum$ACE14.1))
# NA's only exist for ACE item 14 (discrimination)
# recode NA"s to 0
ACE.sum$ACE14.1 <- ifelse( is.na( ACE.sum$ACE14.1 ), 0, ACE.sum$ACE14.1 )
sum(is.na(ACE.sum$ACE14.1))
table(ACE.sum$ACE14.1)
# load data
fall <- read_csv( "/Users/david/Desktop/aim_study/raw_data/raw_data_fall.csv" )
spring <- read_csv( "/Users/david/Desktop/aim_study/raw_data/raw_data_spring.csv" )
### prep fall data for merging
# subset necessary variables from data files
names( fall )
fall2 <- fall %>% select( ID, Duration.M, Age, Sex, Race1, Race2, Race3, Race4,
Race5, Race6, Race7, Race8, Race_Other, ses1, ses2,
ACE1.1, ACE1.5, ACE2.1, ACE2.5, ACE3.1, ACE3.5,
ACE4.1, ACE4.5, ACE5.1, ACE5.5, ACE6.1, ACE6.5,
ACE7.1, ACE7.5, ACE8.1, ACE8.5, ACE9.1, ACE9.5,
ACE10.1, ACE10.5, ACE11.1, ACE11.5, ACE12.1, ACE12.5,
ACE13.1, ACE13.5, ACE14.1, ACE14.5, ACE15.1, ACE15.5,
GAD1, GAD2, GAD3, GAD4, GAD5, GAD6, GAD7, PHQ1, PHQ2,
PHQ3, PHQ4, PHQ5, PHQ6, PHQ7, PHQ8, PHQ9 )
# recode data
fall2$m0f1 <- ifelse( fall2$Sex == 2, 0, fall2$Sex )
table( fall2$m0f1, exclude = NULL )
fall2$Race.b <- ifelse( fall2$Race7 == 1 & is.na( fall2$Race1 ) & is.na( fall2$Race2 ) & is.na( fall2$Race3 ) &
is.na( fall2$Race4 ) & is.na( fall2$Race5 ) & is.na( fall2$Race6 ) & is.na( fall2$Race8 ), 1, 0 )
table( fall2$Race.b, exclude = NULL )
fall2$ACE1.1 <- ifelse( fall2$ACE1.1 == 5, 1, 0 )
fall2$ACE2.1 <- ifelse( fall2$ACE2.1 == 5, 1, 0 )
fall2$ACE3.1 <- ifelse( fall2$ACE3.1 == 5, 1, 0 )
fall2$ACE4.1 <- ifelse( fall2$ACE4.1 == 5, 1, 0 )
fall2$ACE5.1 <- ifelse( fall2$ACE5.1 == 5, 1, 0 )
fall2$ACE6.1 <- ifelse( fall2$ACE6.1 == 5, 1, 0 )
fall2$ACE7.1 <- ifelse( fall2$ACE7.1 == 5, 1, 0 )
fall2$ACE8.1 <- ifelse( fall2$ACE8.1 == 5, 1, 0 )
fall2$ACE9.1 <- ifelse( fall2$ACE9.1 == 5, 1, 0 )
fall2$ACE10.1 <- ifelse( fall2$ACE10.1 == 5, 1, 0 )
fall2$ACE11.1 <- ifelse( fall2$ACE11.1 == 5, 1, 0 )
fall2$ACE12.1 <- ifelse( fall2$ACE12.1 == 23, 1, 0 )
fall2$ACE13.1 <- ifelse( fall2$ACE13.1 == 5, 1, 0 )
fall2$ACE14.1 <- ifelse( fall2$ACE14.1 == 5, 1, 0 )
fall2$ACE15.1 <- ifelse( fall2$ACE15.1 == 23, 1, 0 )
# create cohort variable for post-merge
fall2$cohort <- 1
table(fall2$ACE14.1)
table(fall2$ACE1.1)
table(fall2$ACE2.1)
table(fall2$ACE3.1)
